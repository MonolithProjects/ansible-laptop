---
- name: System tuning
  hosts: laptop
  become: true
  gather_facts: true
  handlers:
    - name: Import handlers
      ansible.builtin.import_tasks: ../handlers/main.yml
  tasks:

  ###### Terminal ###########################################

    - name: CLI history backward
      ansible.builtin.lineinfile:
        path: /etc/inputrc
        regexp: ' history-search-backward$'
        line: '"\e[A": history-search-backward'

    - name: CLI history forward
      ansible.builtin.lineinfile:
        path: /etc/inputrc
        regexp: ' history-search-forward'
        line: '"\e[B": history-search-forward'

    - name: Create ~/.config/fish/conf.d/
      ansible.builtin.file:
        path: ~/.config/fish/conf.d/
        state: directory
        mode: "0755"
        recurse: true

    - name: Copy fish config file
      ansible.builtin.template:
        src: templates/config.fish
        dest: ~/.config/fish/config.fish
        mode: "0600"
      become: false

    - name: Copy my fish config file
      ansible.builtin.template:
        src: templates/my.fish.j2
        dest: ~/.config/fish/conf.d/my.fish
        mode: "0600"
      become: false

    - name: Copy my prompt
      ansible.builtin.copy:
        src: templates/my_prompt.json
        dest: ~/.config/fish/.my_prompt.json
        mode: "0600"
      become: false

    - name: Copy my fish abbreviations file
      ansible.builtin.template:
        src: templates/abbr.fish.j2
        dest: ~/.config/fish/conf.d/abbr.fish
        mode: "0600"
      become: false

    - name: Copy gitconfig
      ansible.builtin.copy:
        src: files/gitconfig
        dest: ~/.gitconfig
        mode: "0600"
      become: false

  ###### DNS ################################################

    - name: Enable and start systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        enabled: true
        state: started

  ###### Docker #############################################

    - name: Docker custom config
      ansible.builtin.template:
        src: templates/docker_daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: "0644"
      notify: Restart docker

    - name: Eanble and start docker
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    - name: Create portainer_data volume
      community.docker.docker_volume:
        name: portainer_data

    - name: Portainer
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        command: -H unix:///var/run/docker.sock
        container_default_behavior: compatibility
        pull: true
        state: started
        privileged: true
        restart_policy: unless-stopped
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
        ports:
          - "9000:9000"
        env:
          TZ: "CET"

  ####### Gnome #############################################

    - name: Xorg vs. Wayland
      ansible.builtin.lineinfile:
        path: /etc/gdm/custom.conf
        regexp: 'WaylandEnable='
        line: 'WaylandEnable={{ wayland }}'

  ###### Kernel config ######################################

    - name: Enable kernel config
      ansible.posix.sysctl:
        name: fs.inotify.max_queued_events
        value: '524288'
        sysctl_file: /etc/sysctl.d/99-sysctl.conf
        reload: false

    - name: Enable kernel config
      ansible.posix.sysctl:
        name: fs.inotify.max_queued_events
        value: '524288'
        sysctl_file: /etc/sysctl.d/99-sysctl.conf
        reload: false

    - name: Enable kernel config
      ansible.posix.sysctl:
        name: fs.inotify.max_user_instances
        value: '512'
        sysctl_file: /etc/sysctl.d/99-sysctl.conf
        reload: false

    - name: Enable kernel config
      ansible.posix.sysctl:
        name: fs.inotify.max_user_watches
        value: '524288'
        sysctl_file: /etc/sysctl.d/99-sysctl.conf
        reload: false

  ###### Udev rules #########################################

    - name: Copy custom udev rules
      ansible.builtin.copy:
        src: files/90-mikes-udev.rules
        dest: /etc/udev/rules.d/90-mikes-udev.rules
        mode: "0644"
      notify: Reload udev

####### Terraform ##########################################

    - name: Create directory for Terraform plugins
      ansible.builtin.file:
        path: ~/.terraform.d/plugin-cache
        state: directory
        mode: "0700"
        recurse: true
